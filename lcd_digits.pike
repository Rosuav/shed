/* Find optimal character mappings for LCD panel large digits

Each character is drawn on a 3x3 grid, or more precisely, on a 17x26 matrix with dead cells:
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....

..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....

..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....
..... ..... .....

The gaps will always remain as gaps.

First step: Find an ideal way to display these, imagining that we could turn any pixel on or off as needed.
This will be done using a font from the system; the selection of font will require some contemplation.

Second step: Find ROM characters that give the best approximation to these. Will need to key in the full
5x8 matrices for each available ROM character. https://cdn-shop.adafruit.com/datasheets/WH2004A-CFH-JT%23.pdf
- Option 1: Allow bright dead pixels.
- Option 2: Disallow them, or at least strongly penalize them.

Third step: Design a maximum of eight RAM characters, for which we have full control of the 5x8 matrix.
Try to have the most improvement possible for each one.
*/

int main() {
	Image.Fonts.set_font_dirs(({"/usr/share/fonts/truetype/dejavu"}));
	object font = Image.Fonts.open_font("DejaVu Sans", 32, 0);
	foreach ("0123456789" / "", string digit) {
		object img = font->write(digit)->autocrop();
		write("%O --> %d x %d\n", digit, img->xsize(), img->ysize());
		write("_" * img->xsize() + "\n");
		for (int r = 0; r < img->ysize(); ++r) {
			string line = "";
			for (int c = 0; c < img->xsize(); ++c) {
				//Note that we just look at the red component; it's assumed that green and blue are the same.
				int pixel = img->getpixel(c, r)[0];
				//For visuals, show an approximation of the darkness using a block-drawing character.
				string chr = " ";
				if (pixel >= 32) chr = "\u2591";
				if (pixel >= 96) chr = "\u2592";
				if (pixel >= 160) chr = "\u2593";
				if (pixel >= 224) chr = "\u2588";
				line += chr;
			}
			write("%s|\n", string_to_utf8(line));
		}
	}
}
