# Build/update the city list for tordesillas.js
# 1. Download the world city data from https://simplemaps.com/data/world-cities
# 2. Extract it to a temporary directory
# 3. Run this script, pointing it to the CSV file from that archive
# 4. Commit the relevant change to tordesillas.js

import csv
import json
import sys
import os.path

if len(sys.argv) < 2:
	sys.exit(1, "USAGE: python3 tordesillas.py /path/to/worldcities.csv\n")

with open(sys.argv[1], newline="") as f: cities = list(csv.DictReader(f))
print(len(cities), "cities loaded.")
saint_colors = {
	"san": "#c1ab08",
	"sao": "#39a065",
	"saint": "#c11a0e", "st": "#c11a0e",
	"sainte": "#1432d2",
	"santo": "#639", "santa": "#639", # Unknown what country these should be, so they can get Rebecca Purple
}
saintcities = []
for city in cities:
	name = city["city_ascii"].replace("-", " ").casefold().split()
	for word in name:
		if word in saint_colors:
			# TODO: What happens if a name has more than one?
			saintcities.append({
				"name": city["city"],
				"lat": city["lat"], "lng": city["lng"],
				"pop": city["population"], # In case we want to rescale the markers by city size
				"color": saint_colors[word],
			})
			break
print(len(saintcities), "with Saint names")
js = os.path.join(os.path.dirname(sys.argv[0]), "tordesillas.js")
with open(js) as f: jstext = f.read()
before = jstext.split("//--BEGIN AUTOGENERATED CODE--//")[0]
after = jstext.split("//--END AUTOGENERATED CODE--//")[1]
jstext = f"""{before}//--BEGIN AUTOGENERATED CODE--//
const cities = {json.dumps(saintcities)};
const colors = {json.dumps(saint_colors)};
//--END AUTOGENERATED CODE--//{after}"""
with open(js, "w") as f: f.write(jstext)
